@page "/"
@using Yalda.Client.Core
@using System.Text.Json

<div class="container rtl text-center">
    <div class="row">
        <div class="col text-dark">
            <br />
            <div class="row align-items-start">
                <div class="col">
                    <img src="/hafez/button-noshadow.png" @onclick="ShowMessage" />
                </div>
            </div>
            <div class="row align-items-center">
                <div class="col">
                    @if (showMes)
                    {
                        <div @onclick="HideMessage">
                            <p style="font-size:4vw;">@mesra[0]</p>
                            <p style="font-size:4vw;">@mesra[1]</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

</div>

@code {
    bool show = false;
    bool showMes = false;
    string[] mesra = new string[2];
    List<Sher>? Shers = new List<Sher>(); // Create a Sher class to hold your data

    string butttonImage = "button.png";
    string butttonShadowImage = "button-noshadow.png";

    protected override async Task OnInitializedAsync()
    {
        // Fetch data from an API endpoint or a local JSON file
        // For example, using HttpClient to get data from an API endpoint
        var httpClient = new HttpClient();
        var response = await httpClient.GetAsync("https://localhost:7017/hafez/hafez.json");

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            Shers = JsonSerializer.Deserialize<List<Sher>>(content, new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true // To ignore case when deserializing
            });
        }
        else
        {
            // Handle the error if the request fails
            // For example: Log the error, display an error message, etc.
        }
    }

    void SendMessage()
    {
        showMes = !showMes;

        if (showMes)
        {
            int num = GenerateRandomNumber(1, 3406);
            var found = Shers.FirstOrDefault(element => element.Id == num);

            if (found != null)
            {
                mesra = found.Beit.Split('*');
                showMes = true;
            }
        }
    }

    void HideMessage()
    {
        showMes = false;
        show = true;
    }

    void ShowMessage()
    {
        SendMessage();
    }

    int GenerateRandomNumber(int min, int max)
    {
        Random random = new Random();
        return random.Next(min, max + 1);
    }

}
